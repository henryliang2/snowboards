[{"/Users/henryliang/js/snowboards/src/index.js":"1","/Users/henryliang/js/snowboards/src/App.js":"2","/Users/henryliang/js/snowboards/src/reportWebVitals.js":"3","/Users/henryliang/js/snowboards/src/Components/SnowboardList.js":"4","/Users/henryliang/js/snowboards/src/Resources/Queries.js":"5","/Users/henryliang/js/snowboards/src/Components/Landing.js":"6","/Users/henryliang/js/snowboards/src/Components/Navigation.js":"7","/Users/henryliang/js/snowboards/src/Components/ManufacturerHeader.js":"8"},{"size":501,"mtime":1606899914693,"results":"9","hashOfConfig":"10"},{"size":2586,"mtime":1606908294154,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606893458322,"results":"12","hashOfConfig":"10"},{"size":1919,"mtime":1606900301371,"results":"13","hashOfConfig":"10"},{"size":487,"mtime":1606906946141,"results":"14","hashOfConfig":"10"},{"size":2118,"mtime":1606900009461,"results":"15","hashOfConfig":"10"},{"size":371,"mtime":1606898918210,"results":"16","hashOfConfig":"10"},{"size":532,"mtime":1606908530376,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"lj3ufq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/henryliang/js/snowboards/src/index.js",[],["37","38"],"/Users/henryliang/js/snowboards/src/App.js",["39"],"/Users/henryliang/js/snowboards/src/reportWebVitals.js",[],"/Users/henryliang/js/snowboards/src/Components/SnowboardList.js",["40"],"import React, { useEffect, useContext, useCallback } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { QueryArgumentContext, SnowboardContext } from '../App';\n\nconst SnowboardList = (props) => {\n\n  let { type, manufacturer } = useParams();\n  const { setSnowboards } = useContext(SnowboardContext);\n  const { setQueryArguments } = useContext(QueryArgumentContext);\n\n  const getQueryFromParams = useCallback(() => {\n    setSnowboards([]);\n    if (type) setQueryArguments({ type });\n    if (manufacturer) setQueryArguments({ manufacturer });\n  }, [type, manufacturer])\n\n  useEffect(() => {\n    getQueryFromParams();\n  }, [getQueryFromParams]);\n\n  return (\n    <div className='card__container'>\n      { props.snowboards &&\n        props.snowboards.map((snowboard, i) => {\n          const upperCasedName = snowboard.name.toUpperCase();\n\n          return (\n            <div className='card' key={i}>\n              <div className='card__name'>{upperCasedName}</div>\n              <div className='card__info'>\n                <div className='card__type'>\n                  <span className='card__descriptor'>TYPE:&nbsp;</span>\n                  {snowboard.directional ? 'Directional' : 'Twin'}\n                </div>\n                <div className='card__style'>\n                  <span className='card__descriptor'>STYLE:&nbsp;</span>\n                  <Link to={`/type/${snowboard.style}`}>{snowboard.style}</Link>\n                </div>\n                <div className='card__manufacturer'>\n                  <span className='card__descriptor'>BUILT BY:&nbsp;</span>\n                  <Link to={`/manufacturer/${snowboard.manufacturer}`}>{snowboard.manufacturer}</Link>\n                </div>\n              </div>\n              <div className='card__image'><img src={snowboard.image} alt={snowboard.name} /></div>\n            </div>\n          )}\n    )}\n  </div>\n  );\n\n}\n\nexport default SnowboardList;","/Users/henryliang/js/snowboards/src/Resources/Queries.js",[],"/Users/henryliang/js/snowboards/src/Components/Landing.js",["41"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SnowboardContext } from '../App';\nimport './../Styles/Landing.css'\n\nconst Landing = () => {\n  \n  const history = useHistory();\n  const { snowboards, setSnowboards } = useContext(SnowboardContext);\n\n  const [type, setType] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n\n  const handleSubmit = () => {\n    if (type.length) history.push(`/type/${type}`)\n    if (manufacturer.length) history.push(`/manufacturer/${manufacturer}`)\n  }\n\n  return (\n    <div className='landing'>\n      <form \n        onSubmit={(e) => {\n          e.preventDefault();\n          setSnowboards([]);\n          handleSubmit();\n        }\n      }>\n        <div className='landing__title'>Quality snowboards made in Canada</div>\n        <div className='landing__category'>Browse by Riding Style</div>\n        <div className='landing__select'>\n          <select \n            value={type}\n            onChange={(e) => { \n              setType(e.target.value)\n              setManufacturer('');\n            }}\n            >\n            <option value=''>Choose a style</option>\n            <option value='Freestyle'>Freestyle</option>\n            <option value='All-Mountain Freestyle'>All-Mountain Freestyle</option>\n            <option value='All-Mountain Freeride'>All-Mountain Freeride</option>\n            <option value='Freeride'>Freeride</option>\n          </select>\n        </div>\n        <div className='landing__category'>Browse by Manufacturer</div>\n        <div className='landing__select'>\n        <select \n            value={manufacturer}\n            onChange={(e) => { \n              setManufacturer(e.target.value)\n              setType('');\n            }}\n            >\n            <option value=''>Choose a manufacturer</option>\n            <option value='Wired Snowboards'>Wired Snowboards</option>\n            <option value='Hightide Mfg'>Hightide Mfg</option>\n          </select>\n        </div>\n        <input type='submit' value='Search' />\n      </form>\n    </div>\n  );\n\n}\n\nexport default Landing;","/Users/henryliang/js/snowboards/src/Components/Navigation.js",[],"/Users/henryliang/js/snowboards/src/Components/ManufacturerHeader.js",["42","43","44","45","46","47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":53,"column":6,"nodeType":"55","endLine":53,"endColumn":22,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":15,"column":6,"nodeType":"55","endLine":15,"endColumn":26,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":9,"column":11,"nodeType":"61","messageId":"62","endLine":9,"endColumn":21},{"ruleId":"59","severity":1,"message":"63","line":8,"column":10,"nodeType":"61","messageId":"62","endLine":8,"endColumn":15},{"ruleId":"59","severity":1,"message":"64","line":8,"column":17,"nodeType":"61","messageId":"62","endLine":8,"endColumn":25},{"ruleId":"59","severity":1,"message":"65","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":18},{"ruleId":"59","severity":1,"message":"66","line":9,"column":20,"nodeType":"61","messageId":"62","endLine":9,"endColumn":31},{"ruleId":"59","severity":1,"message":"67","line":10,"column":10,"nodeType":"61","messageId":"62","endLine":10,"endColumn":21},{"ruleId":"59","severity":1,"message":"68","line":10,"column":23,"nodeType":"61","messageId":"62","endLine":10,"endColumn":37},{"ruleId":"53","severity":1,"message":"69","line":15,"column":6,"nodeType":"55","endLine":15,"endColumn":8,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSnowboards'. Either include it or remove the dependency array.","ArrayExpression",["73"],"React Hook useCallback has missing dependencies: 'setQueryArguments' and 'setSnowboards'. Either include them or remove the dependency array.",["74"],"no-unused-vars","'snowboards' is assigned a value but never used.","Identifier","unusedVar","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'coordinates' is assigned a value but never used.","'setCoordinates' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'manufacturer' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [fetchSnowboards, queryArguments]",{"range":"82","text":"83"},"Update the dependencies array to be: [setSnowboards, type, setQueryArguments, manufacturer]",{"range":"84","text":"85"},"Update the dependencies array to be: [manufacturer, props]",{"range":"86","text":"87"},[1452,1468],"[fetchSnowboards, queryArguments]",[569,589],"[setSnowboards, type, setQueryArguments, manufacturer]",[420,422],"[manufacturer, props]"]